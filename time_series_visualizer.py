# -*- coding: utf-8 -*-
"""time_series_visualizer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wsYzwafkHHpdQh3WbS83hCKKF7LfNa7d
"""

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from pandas.plotting import register_matplotlib_converters
register_matplotlib_converters()

# Import data
df = pd.read_csv('fcc-forum-pageviews.csv', index_col='date', parse_dates=True)

# Clean data: remove top/bottom 2.5%
df = df[(df['value'] >= df['value'].quantile(0.025)) &
        (df['value'] <= df['value'].quantile(0.975))]

def draw_line_plot():
    # Draw line plot
    fig, ax = plt.subplots(figsize=(12, 8))
    ax.plot(df.index, df['value'], color='red', linewidth=1)
    ax.set_title("Daily freeCodeCamp Forum Page Views 5/2016-12/2019")
    ax.set_xlabel("Date")
    ax.set_ylabel("Page Views")

    # Save figure
    fig.savefig('line_plot.png')
    return fig

def draw_bar_plot():
    df_bar = df.copy()
    df_bar['year'] = df_bar.index.year
    df_bar['month'] = df_bar.index.month

    # Group by year and month number
    df_bar = df_bar.groupby(['year', 'month'])['value'].mean().reset_index()

    month_order = [
        'January', 'February', 'March', 'April', 'May', 'June',
        'July', 'August', 'September', 'October', 'November', 'December'
    ]
    df_bar['month_name'] = df_bar['month'].apply(lambda x: month_order[x-1])

    # Prepare data for bar positions
    years = sorted(df_bar['year'].unique())
    n_months = 12
    width = 0.6 / n_months  # width of each bar
    fig, ax = plt.subplots(figsize=(12, 8))

    # Draw bars manually
    for i, month in enumerate(month_order):
        values = []
        for year in years:
            row = df_bar[(df_bar['year']==year) & (df_bar['month_name']==month)]
            values.append(row['value'].values[0] if not row.empty else 0)
        ax.bar(
            [year + width*i for year in years],
            values,
            width=width,
            label=month
        )

    ax.set_xlabel("Years")
    ax.set_ylabel("Average Page Views")
    ax.set_xticks(years)
    ax.set_xticklabels([str(y) for y in years])
    ax.legend()
    fig.savefig('bar_plot.png')
    return fig



def draw_box_plot():
    # Prepare data for box plots
    df_box = df.copy().reset_index()
    df_box['year'] = df_box['date'].dt.year
    df_box['month'] = df_box['date'].dt.strftime('%b')

    month_order = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
                   'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']

    # Draw box plots
    fig, axes = plt.subplots(1, 2, figsize=(15, 6))

    sns.boxplot(ax=axes[0], x='year', y='value', data=df_box, palette='deep')
    axes[0].set_title('Year-wise Box Plot (Trend)')
    axes[0].set_xlabel('Year')
    axes[0].set_ylabel('Page Views')

    sns.boxplot(ax=axes[1], x='month', y='value', data=df_box,
                order=month_order, palette='deep')
    axes[1].set_title('Month-wise Box Plot (Seasonality)')
    axes[1].set_xlabel('Month')
    axes[1].set_ylabel('Page Views')

    # Save figure
    fig.savefig('box_plot.png')
    return fig