# -*- coding: utf-8 -*-
"""medical_data_visualizer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NAIwPQHl7kYi1X9lIF8tfsDY_hwg0pXS
"""

import pandas as pd
df = pd.read_csv('medical_examination.csv')
df.isna().sum()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

# 1
df = pd.read_csv('medical_examination.csv')

# 2
df['overweight'] = ((((df['weight'])*1.0)/(df['height']/100)**2)>25).map({False:0,True:1})

# 3
df['cholesterol'] = df['cholesterol'].map(lambda x: 0 if x == 1 else 1)
df['gluc'] = df['gluc'].map(lambda x: 0 if x == 1 else 1)


# 4
def draw_cat_plot():
    # 5
    df_cat=pd.melt(df,id_vars="cardio",value_vars=['active','alco','cholesterol','gluc','overweight','smoke'])



    # 6
    df_cat = (df_cat.groupby(by=['cardio','variable','value'],as_index=False).size()).rename(columns={'size':'total'})


    # 7
    catplot=sns.catplot(df_cat,x='variable',y='total',kind='bar',hue='value',errorbar=None,col='cardio')


    # 8
    fig=catplot.fig


    # 9
    fig.savefig('catplot.png')
    return fig


# 10
def draw_heat_map():
    # 11
    #df_heat = df[(df['ap_lo'] <= df['ap_hi']) &(df['height'] >= df['height'].quantile(0.025)) & (df['height'] <= df['height'].quantile(0.975)) & (df['weight'] >= df['weight'].quantile(0.025)) & (df['weight'] <= df['weight'].quantile(0.975))]
    df_heat = df[
    (df['ap_lo'] <= df['ap_hi']) &
    (df['height'] >= df['height'].quantile(0.025)) &
    (df['height'] <= df['height'].quantile(0.975)) &
    (df['weight'] >= df['weight'].quantile(0.025)) &
    (df['weight'] <= df['weight'].quantile(0.975))
]

    # 12
    #corr = df_heat.corr()
    #columns_to_include = ['ap_hi', 'ap_lo', 'height', 'weight', 'cholesterol', 'gluc', 'smoke', 'alco', 'active', 'cardio']
    corr = df_heat.corr().round(1)   # force rounding to 1 decimal place



    # 13
    mask =  np.triu(np.ones_like(corr,dtype=bool))


    # 14
    fig, ax = plt.subplots(figsize=(12,12))

    # 15

    #sns.heatmap(corr, mask=mask, annot=True, cmap='coolwarm', fmt=".1f", linewidths=0.5,cbar_kws={"shrink": 0.8})
    sns.heatmap(
        corr,
        mask=mask,
        annot=True,           # Annotate the cells
        fmt=".1f",            # Use one decimal place
        linewidths=0.5,       # Add lines between cells
        cmap='coolwarm',      # Use coolwarm colormap
        center=0,             # Center colormap at 0
        square=True,          # Force square cells
        ax=ax
    )

    plt.tight_layout()

    # 16
    fig.savefig('heatmap.png')
    return fig

draw_cat_plot()

draw_heat_map()